---
import { Body } from '../components/Body';
import { Header } from '../components/Header';
import Loading from '../templates/Loading.astro';
import { fetchHelper, fetchContributions } from '../utils/fetch';
import Card from '../templates/Card.astro';
import Contributions from '../templates/Contributions.astro';
import Links from '../templates/Links.astro';
import { ContributionHistory } from '../components/ContributionHistory';
export interface Props {
    title: string;
}
// todo remove loading states since its a ssr app
const { isLoading, data, err }: any = await fetchHelper('users');
const { isLoading: isLoadingContributions, data: contributionData, err: error }: any = await fetchContributions('a');
// const { data: contribution }: any = await fetchContribution();
const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width" />
        <meta name="generator" content={Astro.generator} />
        <link rel="icon" href="/logo.png" type="image/x-icon" />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
        <link href="https://css.gg/css" rel="stylesheet" />
        <link
            href="https://fonts.googleapis.com/css2?family=Montserrat:wght@100;400;700&display=swap"
            rel="stylesheet"
        />
        <title>{title}</title>
        <style>
            :root {
                --ggs: 0.8;
            }
        </style>
        <script defer src="https://unpkg.com/flowbite@1.5.3/dist/flowbite.js"></script>
    </head>
    <body class="bg-bg_white dark:bg-bg_dark h-screen w-screen max-w-7xl mx-auto">
        <!-- rename body  -->
        <Body client:load>
            <main slot="body">
                <Header client:load />
                {
                    isLoading || !data ? (
                        <Loading />
                    ) : (
                        <section>
                            <Card data={data} />
                        </section>
                    )
                }

                {
                    isLoadingContributions || !contributionData ? (
                        <Loading />
                    ) : (
                        <section class="flex justify-center">
                            <div>
                                <Contributions
                                    isLoading={isLoadingContributions}
                                    data={contributionData.contributions}
                                    error={error}
                                    last_year={contributionData.last_year_contribution}
                                />
                            </div>
                        </section>
                    )
                }
                <ContributionHistory client:load />

                <!-- <footer>this is a footer</footer> -->
            </main>
        </Body>
    </body>
</html>
